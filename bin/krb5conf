#!/usr/bin/env python3

import os
import sys
import argparse

"""
See :https://gist.github.com/zhsh9/f1ba951ec1eb3de401707bbbec407b98

This script can easily configure /etc/krb5.conf for evil-winrm, by providing a domain fqdn and domain controller name
So that evil-winrm can be used with kerberos authentication

Evil-winrm Example:

```bash
export KRB5CCNAME=Administrator.ccache
krb5conf forest htb.local
evil-winrm -i forest.htb.local -r htb.local
```

Usage: krb5conf $DOMAIN $DC_NAME
"""

def get_config(domain_fqdn: str, dc_name: str):
    """
    Generate the krb5.conf configuration content for the given domain and DC.
    """
    return f"""[libdefault]
        default_realm = {domain_fqdn.upper()}

[realms]
        {domain_fqdn.upper()} = {{
                kdc = {dc_name.lower()}.{domain_fqdn.lower()}
                admin_server = {dc_name.lower()}.{domain_fqdn.lower()}
        }}

[domain_realm]
        {domain_fqdn.lower()} = {domain_fqdn.upper()}
        .{domain_fqdn.lower()} = {domain_fqdn.upper()}
"""


def request_root():
    """
    Relaunch the script with sudo if not running as root.
    """
    if os.geteuid() != 0:
        print("[*] This script must be run as root")
        args = ["sudo", sys.executable] + sys.argv + [os.environ]
        os.execlpe("sudo", *args)


def main():
    """
    Parse arguments, confirm overwrite, and write the krb5.conf file.
    """
    parser = argparse.ArgumentParser(description="Configure krb5.conf for evil-winrm")
    parser.add_argument("domain_fqdn", help="Domain FQDN")
    parser.add_argument("dc_name", help="Domain Controller Name")
    args = parser.parse_args()

    request_root()

    config_data = get_config(args.domain_fqdn, args.dc_name)
    print("[*] Configuration Data:")
    print(config_data)

    # Confirm with the user before overwriting the config file
    confirm = input("\n[!] Above Configuration will overwrite /etc/krb5.conf, are you sure? [Y/n] ").strip().lower()
    if confirm not in ["", "y", "yes"]:
        print("[!] Aborting")
        sys.exit(1)

    # Write the configuration to /etc/krb5.conf
    with open("/etc/krb5.conf", "w") as f:
        f.write(config_data)

    print("[+] /etc/krb5.conf has been configured")


if __name__ == "__main__":
    main()
